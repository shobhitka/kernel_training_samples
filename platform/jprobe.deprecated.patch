diff --git a/platform/kprobe.c b/platform/kprobe.c
index c90a037..602a965 100644
--- a/platform/kprobe.c
+++ b/platform/kprobe.c
@@ -1,8 +1,9 @@
-#include<linux/module.h>
-#include<linux/version.h>
-#include<linux/kernel.h>
-#include<linux/init.h>
-#include<linux/kprobes.h>
+#include <linux/module.h>
+#include <linux/version.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/kprobes.h>
+#include <net/ip.h>
 
 static char *symbol = "twbnet_start_xmit";
 module_param(symbol, charp, S_IRUGO|S_IWUSR);
@@ -20,7 +21,19 @@ void kp_post_handler(struct kprobe *p, struct pt_regs *regs, unsigned long flags
 	printk("[twb-probe][%s][0x%p] Post Handler: IP: 0x%lx, FLAGS: 0x%lx\n", p->symbol_name, p->addr, regs->ip, regs->flags);
 }
 
+
+static int twbnet_jp_handler(struct sk_buff *skb, struct net_device *dev)
+{
+	struct iphdr *iph;
+	iph = ip_hdr(skb);
+
+	printk("[twb-jprobe]: src (%s) --> dst (%s)\n", iph->saddr, iph->daddr);
+
+	return 0;
+}
+
 static struct kprobe kp;
+static struct jprobe jp;
 
 int twb_kprobe_init(void)
 {
@@ -28,12 +41,17 @@ int twb_kprobe_init(void)
 	kp.post_handler = kp_post_handler;
 	kp.symbol_name = symbol;
 	register_kprobe(&kp);
+
+	jp.kp.symbol_name = symbol;
+	jp.entry = twbnet_jp_handler;
+	register_jprobe(&jp);
 	return 0;
 }
 
 void twb_kprobe_exit(void)
 {
 	unregister_kprobe(&kp);
+	unregister_jprobe(&jp);
 }
 
 module_init(twb_kprobe_init);
